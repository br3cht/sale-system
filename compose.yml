volumes:
    db:
    pgadmin_data:

services:
    nginx:
        container_name: sale-system-nginx
        image: nginx:alpine
        restart: unless-stopped
        mem_limit: 200M
        ports:
            - "${DOCKER_HTTP_PORT}:80"
        volumes:
            - ./:/var/www
            - ./.docker/nginx/default.d/:/etc/nginx/conf.d/
        networks:
          - sale-system

    app:
        container_name: sale-system-api
        build:
            args:
              user: ${DOCKER_USER_ID:-0}
              uid: ${DOCKER_GROUP_ID:-0}
            context: .
            dockerfile: Dockerfile
        image: sale-system-api
        restart: unless-stopped
        working_dir: /var/www/
        mem_limit: 200M
        command:
        depends_on:
          - db
        volumes:
            - .:/var/www
        networks:
          - sale-system

    db:
        container_name: sale-system-db
        image: postgres:15
        restart: unless-stopped
        mem_limit: 400M
        environment:
            POSTGRES_USER: root
            POSTGRES_DB: sale-system
            POSTGRES_HOST_AUTH_METHOD: trust
        volumes:
            - db:/var/lib/postgresql/data
        ports:
          - ${DOCKER_DB_PORT}:5432
        networks:
          - sale-system

    queue:
      container_name: sale-system-queue
      image: sale-system-api
      restart: unless-stopped
      working_dir: /var/www
      mem_limit: 400M
      command: ['bash', '-c', 'composer install && php artisan migrate && php artisan db:seed && php artisan horizon']
      depends_on:
        - app
        - db
        - cache
      volumes:
        - .:/var/www
      networks:
        - sale-system

    pgadmin:
      container_name: sale-system-manager-db
      image: dpage/pgadmin4:latest
      environment:
       PGADMIN_DEFAULT_EMAIL: admin@example.com
       PGADMIN_DEFAULT_PASSWORD: admin
      ports:
        - "5050:80"
      volumes:
        - pgadmin_data:/var/lib/pgadmin
      networks:
        - sale-system
    cache:
        container_name: sale-system-redis
        image: redis:latest
        mem_limit: 400M
        restart: unless-stopped
        ports:
            - "6379:6379"
        networks:
            - sale-system

    mailhog:
        container_name: sale-system-mailhog
        image: 'mailhog/mailhog:latest'
        mem_limit: 400M
        ports:
            - ${DOCKER_MAIL_SMTP_PORT}:1025
            - ${DOCKER_MAIL_HTTP_PORT}:8025
        networks:
            - sale-system

networks:
    sale-system:
        driver: bridge
